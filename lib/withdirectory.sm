#! ruby

##  WithDirectory, OO-functional style context managers for Sidef
##    Copyright Cat Stevens 2018
##  This program is free software: you can redistribute it and/or modify
##    it under the terms of the GNU General Public License as published by
##    the Free Software Foundation, either version 3 of the License, or
##    (at your option) any later version.
##
##    This program is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License
##    along with this program.  If not, see <https://www.gnu.org/licenses/>.


/* abstract */ # /
class WithDirectory {
  -> with_directory (operation) {
    var oldwd = Dir.cwd
    (if (oldwd == self.wd) {
      (operation.run)
    } else {
      self.wd.chdir
      var (*r) = (operation.run)
      oldwd.chdir
      r...
    })
  }
}

/* abstract */ # /
class CapturedWriter < WithDirectory {
  method capture_write_disk (String caller_name, Block operation) {
    if (! self.dry_run) {
      self.log.vbs(__FILE__, __LINE__, __METHOD_NAME__, "#{caller_name}: writing disk with", operation)
      return self.with_directory( operation )
    }
    self.log.vbs(__FILE__, __LINE__, __METHOD_NAME__, "#{caller_name}: not writing disk (dry run)")
    nil
  }
}
